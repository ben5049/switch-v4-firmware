/*
 * nx_app.h
 *
 *  Created on: Aug 10, 2025
 *      Author: bens1
 */

#ifndef INC_NX_APP_H_
#define INC_NX_APP_H_

#ifdef __cplusplus
extern "C" {
#endif


#include "stdint.h"
#include "tx_api.h"
#include "nx_api.h"
#include "nxd_dhcp_client.h"
#include "nxd_ptp_client.h"

#include "config.h"


/* Copy all the NetX Duo return codes into an enum for easier use */
typedef enum {
    NX_STATUS_SUCCESS              = NX_SUCCESS,
    NX_STATUS_NO_PACKET            = NX_NO_PACKET,
    NX_STATUS_UNDERFLOW            = NX_UNDERFLOW,
    NX_STATUS_OVERFLOW             = NX_OVERFLOW,
    NX_STATUS_NO_MAPPING           = NX_NO_MAPPING,
    NX_STATUS_DELETED              = NX_DELETED,
    NX_STATUS_POOL_ERROR           = NX_POOL_ERROR,
    NX_STATUS_PTR_ERROR            = NX_PTR_ERROR,
    NX_STATUS_WAIT_ERROR           = NX_WAIT_ERROR,
    NX_STATUS_SIZE_ERROR           = NX_SIZE_ERROR,
    NX_STATUS_OPTION_ERROR         = NX_OPTION_ERROR,
    NX_STATUS_DELETE_ERROR         = NX_DELETE_ERROR,
    NX_STATUS_CALLER_ERROR         = NX_CALLER_ERROR,
    NX_STATUS_INVALID_PACKET       = NX_INVALID_PACKET,
    NX_STATUS_INVALID_SOCKET       = NX_INVALID_SOCKET,
    NX_STATUS_NOT_ENABLED          = NX_NOT_ENABLED,
    NX_STATUS_ALREADY_ENABLED      = NX_ALREADY_ENABLED,
    NX_STATUS_ENTRY_NOT_FOUND      = NX_ENTRY_NOT_FOUND,
    NX_STATUS_NO_MORE_ENTRIES      = NX_NO_MORE_ENTRIES,
    NX_STATUS_ARP_TIMER_ERROR      = NX_ARP_TIMER_ERROR,
    NX_STATUS_RESERVED_CODE0       = NX_RESERVED_CODE0,
    NX_STATUS_WAIT_ABORTED         = NX_WAIT_ABORTED,
    NX_STATUS_IP_INTERNAL_ERROR    = NX_IP_INTERNAL_ERROR,
    NX_STATUS_IP_ADDRESS_ERROR     = NX_IP_ADDRESS_ERROR,
    NX_STATUS_ALREADY_BOUND        = NX_ALREADY_BOUND,
    NX_STATUS_PORT_UNAVAILABLE     = NX_PORT_UNAVAILABLE,
    NX_STATUS_NOT_BOUND            = NX_NOT_BOUND,
    NX_STATUS_RESERVED_CODE1       = NX_RESERVED_CODE1,
    NX_STATUS_SOCKET_UNBOUND       = NX_SOCKET_UNBOUND,
    NX_STATUS_NOT_CREATED          = NX_NOT_CREATED,
    NX_STATUS_SOCKETS_BOUND        = NX_SOCKETS_BOUND,
    NX_STATUS_NO_RESPONSE          = NX_NO_RESPONSE,
    NX_STATUS_POOL_DELETED         = NX_POOL_DELETED,
    NX_STATUS_ALREADY_RELEASED     = NX_ALREADY_RELEASED,
    NX_STATUS_RESERVED_CODE2       = NX_RESERVED_CODE2,
    NX_STATUS_MAX_LISTEN           = NX_MAX_LISTEN,
    NX_STATUS_DUPLICATE_LISTEN     = NX_DUPLICATE_LISTEN,
    NX_STATUS_NOT_CLOSED           = NX_NOT_CLOSED,
    NX_STATUS_NOT_LISTEN_STATE     = NX_NOT_LISTEN_STATE,
    NX_STATUS_IN_PROGRESS          = NX_IN_PROGRESS,
    NX_STATUS_NOT_CONNECTED        = NX_NOT_CONNECTED,
    NX_STATUS_WINDOW_OVERFLOW      = NX_WINDOW_OVERFLOW,
    NX_STATUS_ALREADY_SUSPENDED    = NX_ALREADY_SUSPENDED,
    NX_STATUS_DISCONNECT_FAILED    = NX_DISCONNECT_FAILED,
    NX_STATUS_STILL_BOUND          = NX_STILL_BOUND,
    NX_STATUS_NOT_SUCCESSFUL       = NX_NOT_SUCCESSFUL,
    NX_STATUS_UNHANDLED_COMMAND    = NX_UNHANDLED_COMMAND,
    NX_STATUS_NO_FREE_PORTS        = NX_NO_FREE_PORTS,
    NX_STATUS_INVALID_PORT         = NX_INVALID_PORT,
    NX_STATUS_INVALID_RELISTEN     = NX_INVALID_RELISTEN,
    NX_STATUS_CONNECTION_PENDING   = NX_CONNECTION_PENDING,
    NX_STATUS_TX_QUEUE_DEPTH       = NX_TX_QUEUE_DEPTH,
    NX_STATUS_NOT_IMPLEMENTED      = NX_NOT_IMPLEMENTED,
    NX_STATUS_NOT_SUPPORTED        = NX_NOT_SUPPORTED,
    NX_STATUS_INVALID_INTERFACE    = NX_INVALID_INTERFACE,
    NX_STATUS_INVALID_PARAMETERS   = NX_INVALID_PARAMETERS,
    NX_STATUS_NOT_FOUND            = NX_NOT_FOUND,
    NX_STATUS_CANNOT_START         = NX_CANNOT_START,
    NX_STATUS_NO_INTERFACE_ADDRESS = NX_NO_INTERFACE_ADDRESS,
    NX_STATUS_INVALID_MTU_DATA     = NX_INVALID_MTU_DATA,
    NX_STATUS_DUPLICATED_ENTRY     = NX_DUPLICATED_ENTRY,
    NX_STATUS_PACKET_OFFSET_ERROR  = NX_PACKET_OFFSET_ERROR,
    NX_STATUS_OPTION_HEADER_ERROR  = NX_OPTION_HEADER_ERROR,
    NX_STATUS_CONTINUE             = NX_CONTINUE,
    NX_STATUS_TCPIP_OFFLOAD_ERROR  = NX_TCPIP_OFFLOAD_ERROR,

    NX_STATUS_DHCP_ERROR                     = NX_DHCP_ERROR,
    NX_STATUS_DHCP_NO_RESPONSE               = NX_DHCP_NO_RESPONSE,
    NX_STATUS_DHCP_BAD_IP_ADDRESS            = NX_DHCP_BAD_IP_ADDRESS,
    NX_STATUS_DHCP_ALREADY_STARTED           = NX_DHCP_ALREADY_STARTED,
    NX_STATUS_DHCP_NOT_BOUND                 = NX_DHCP_NOT_BOUND,
    NX_STATUS_DHCP_DEST_TO_SMALL             = NX_DHCP_DEST_TO_SMALL,
    NX_STATUS_DHCP_NOT_STARTED               = NX_DHCP_NOT_STARTED,
    NX_STATUS_DHCP_PARSE_ERROR               = NX_DHCP_PARSE_ERROR,
    NX_STATUS_DHCP_BAD_XID                   = NX_DHCP_BAD_XID,
    NX_STATUS_DHCP_BAD_MAC_ADDRESS           = NX_DHCP_BAD_MAC_ADDRESS,
    NX_STATUS_DHCP_INVALID_MESSAGE           = NX_DHCP_INVALID_MESSAGE,
    NX_STATUS_DHCP_INVALID_PAYLOAD           = NX_DHCP_INVALID_PAYLOAD,
    NX_STATUS_DHCP_INVALID_IP_REQUEST        = NX_DHCP_INVALID_IP_REQUEST,
    NX_STATUS_DHCP_UNKNOWN_OPTION            = NX_DHCP_UNKNOWN_OPTION,
    NX_STATUS_DHCP_INTERFACE_ALREADY_ENABLED = NX_DHCP_INTERFACE_ALREADY_ENABLED,
    NX_STATUS_DHCP_INTERFACE_NOT_ENABLED     = NX_DHCP_INTERFACE_NOT_ENABLED,
    NX_STATUS_DHCP_NO_INTERFACES_ENABLED     = NX_DHCP_NO_INTERFACES_ENABLED,
    NX_STATUS_DHCP_NO_INTERFACES_STARTED     = NX_DHCP_NO_INTERFACES_STARTED,
    NX_STATUS_DHCP_NO_RECORDS_AVAILABLE      = NX_DHCP_NO_RECORDS_AVAILABLE,
    NX_STATUS_DHCP_INVALID_NAME              = NX_DHCP_INVALID_NAME,

    NX_STATUS_PTP_CLIENT_NOT_STARTED                 = NX_PTP_CLIENT_NOT_STARTED,
    NX_STATUS_PTP_CLIENT_ALREADY_STARTED             = NX_PTP_CLIENT_ALREADY_STARTED,
    NX_STATUS_PTP_PARAM_ERROR                        = NX_PTP_PARAM_ERROR,
    NX_STATUS_PTP_CLIENT_INSUFFICIENT_PACKET_PAYLOAD = NX_PTP_CLIENT_INSUFFICIENT_PACKET_PAYLOAD,
    NX_STATUS_PTP_CLIENT_CLOCK_CALLBACK_FAILURE      = NX_PTP_CLIENT_CLOCK_CALLBACK_FAILURE,
} nx_status_t;

typedef enum {
    NX_IP_STATUS_INITIALIZE_DONE        = NX_IP_INITIALIZE_DONE,
    NX_IP_STATUS_ADDRESS_RESOLVED       = NX_IP_ADDRESS_RESOLVED,
    NX_IP_STATUS_LINK_ENABLED           = NX_IP_LINK_ENABLED,
    NX_IP_STATUS_ARP_ENABLED            = NX_IP_ARP_ENABLED,
    NX_IP_STATUS_UDP_ENABLED            = NX_IP_UDP_ENABLED,
    NX_IP_STATUS_TCP_ENABLED            = NX_IP_TCP_ENABLED,
    NX_IP_STATUS_IGMP_ENABLED           = NX_IP_IGMP_ENABLED,
    NX_IP_STATUS_RARP_COMPLETE          = NX_IP_RARP_COMPLETE,
    NX_IP_STATUS_INTERFACE_LINK_ENABLED = NX_IP_INTERFACE_LINK_ENABLED,
} nx_ip_status_t;


extern NX_IP          nx_ip_instance;
extern NX_PACKET_POOL nx_packet_pool;
extern TX_THREAD      nx_app_thread_handle;
extern uint8_t        nx_app_thread_stack[NX_APP_THREAD_STACK_SIZE];
extern NX_DHCP        dhcp_client;
extern TX_SEMAPHORE   dhcp_semaphore_handle;
extern NX_PTP_CLIENT  ptp_client;

void nx_app_thread_entry(uint32_t initial_input);
void nx_link_thread_entry(uint32_t initial_input);

nx_status_t nx_user_init(TX_BYTE_POOL *byte_pool);


#ifdef __cplusplus
}
#endif

#endif /* INC_NX_APP_H_ */
